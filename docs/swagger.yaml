basePath: /
definitions:
  models.Pet:
    type: object
  models.User:
    type: object
host: localhost:8000
info:
  contact: {}
  description: Backend practika
  title: PetShop by Roman
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user with the input payload
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout a user
      tags:
      - auth
  /pets:
    post:
      consumes:
      - application/json
      description: Create a new pet with the input payload
      parameters:
      - description: Pet information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Pet'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Pet'
      summary: Create new pet
      tags:
      - pets
  /pets/{id}:
    delete:
      consumes:
      - application/json
      description: Delete pet by ID
      parameters:
      - description: Pet ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete pet by ID
      tags:
      - pets
    get:
      consumes:
      - application/json
      description: Get pet information by ID
      parameters:
      - description: Pet ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pet'
      summary: Get pet by ID
      tags:
      - pets
    put:
      consumes:
      - application/json
      description: Update pet information by ID
      parameters:
      - description: Pet ID
        in: path
        name: id
        required: true
        type: integer
      - description: Pet information
        in: body
        name: pet
        required: true
        schema:
          $ref: '#/definitions/models.Pet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pet'
      summary: Update pet by ID
      tags:
      - pets
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: SignUp
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user information by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update user by ID
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
